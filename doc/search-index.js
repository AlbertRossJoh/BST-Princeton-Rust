var searchIndex = JSON.parse('{\
"doc":{"doc":"","t":"AAAAAFDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLADLLLLLLLLLLLLL","n":["fundamentals","searching","binary_search","queue","stack","index_of","Queue","borrow","borrow_mut","default","dequeue","enqueue","fmt","from","into","is_empty","new","peek","size","try_from","try_into","type_id","Stack","borrow","borrow_mut","default","fmt","from","into","is_empty","new","peek","pop","push","size","try_from","try_into","type_id","BST","BST","borrow","borrow_mut","delete_max","delete_min","from","get","get_root","into","new","put","try_from","try_into","type_id"],"q":["doc","","doc::fundamentals","","","doc::fundamentals::binary_search","doc::fundamentals::queue","","","","","","","","","","","","","","","","doc::fundamentals::stack","","","","","","","","","","","","","","","","doc::searching","doc::searching::BST","","","","","","","","","","","","",""],"d":["","","","","","The fundamentals binary search represents a generic …","The fundamentals queue module represents a …","","","","Removes an element from the front of the queue.","Adds an element to the back of the queue.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Checks if the queue is empty.","Create a new first-in-first-out (FIFO) queue of generic …","Returns the value at the front of the queue.","Checks if the size is empty.","","","","The fundamentals stack module represents a …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Check if the stack is empty.","Create a new last-in-first-out (LIFO) stack of generic …","Peek at the top element on the stack.","Pop an element from the stack.","Push an element to the stack.","Return the size of the stack (how many elements have been …","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11],"f":[0,0,0,0,0,[[],[[2,[1]]]],0,[[]],[[]],[[],3],[3,2],[3],[[[3,[4]],5],6],[[]],[[]],[3,7],[[],3],[3,2],[3,1],[[],8],[[],8],[[],9],0,[[]],[[]],[[],10],[[[10,[4]],5],6],[[]],[[]],[10,7],[[],10],[10,2],[10,2],[10],[10,1],[[],8],[[],8],[[],9],0,0,[[]],[[]],[11,2],[11,2],[[]],[11,2],[11,2],[[]],[[],11],[11],[[],8],[[],8],[[],9]],"p":[[15,"usize"],[4,"Option"],[3,"Queue"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"bool"],[4,"Result"],[3,"TypeId"],[3,"Stack"],[3,"BST"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
