var searchIndex = JSON.parse('{\
"doc":{"doc":"","t":"AAAAAAADLLLLLLLLLLLLFDLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLADLLLLLLLLLLLLLAAAFFFFFF","n":["fundamentals","searching","sorting","bag","binary_search","queue","stack","Bag","add","borrow","borrow_mut","from","into","is_empty","iterator","new","size","try_from","try_into","type_id","index_of","Queue","borrow","borrow_mut","default","dequeue","enqueue","fmt","from","into","is_empty","new","peek","size","try_from","try_into","type_id","Stack","borrow","borrow_mut","default","fmt","from","into","is_empty","new","peek","pop","push","size","try_from","try_into","type_id","BST","BST","borrow","borrow_mut","delete_max","delete_min","from","get","get_root","into","new","put","try_from","try_into","type_id","insertion","merge","selection","index_sort","sort","sort_slice","index_sort","sort","sort"],"q":["doc","","","doc::fundamentals","","","","doc::fundamentals::bag","","","","","","","","","","","","","doc::fundamentals::binary_search","doc::fundamentals::queue","","","","","","","","","","","","","","","","doc::fundamentals::stack","","","","","","","","","","","","","","","","doc::searching","doc::searching::BST","","","","","","","","","","","","","","doc::sorting","","","doc::sorting::insertion","","","doc::sorting::merge","","doc::sorting::selection"],"d":["","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","The fundamentals binary search represents a generic …","The fundamentals queue module represents a …","","","","Removes an element from the front of the queue.","Adds an element to the back of the queue.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Checks if the queue is empty.","Create a new first-in-first-out (FIFO) queue of generic …","Returns the value at the front of the queue.","Checks if the size is empty.","","","","The fundamentals stack module represents a …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Check if the stack is empty.","Create a new last-in-first-out (LIFO) stack of generic …","Peek at the top element on the stack.","Pop an element from the stack.","Push an element to the stack.","Return the size of the stack (how many elements have been …","","","","","The BST class represents an ordered symbol table og …","","","function for deleting the max node, returns true if …","function for deleting the min node, returns true if …","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a copy of the list given and sorts it, the given …","Insertion sort is one of the simplest sorting algorithms. …","sorting a slice of a vector lo included hi excluded","Creates a copy of the list given and sorts it using merge …","Merge sort is a recusive algorithm that sorts an array by …","Selection sort is the simplest sorting algorithms. It …"],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,[1],[[]],[[]],[[]],[[]],[1,2],[1,3],[[],1],[1,4],[[],5],[[],5],[[],6],[[],[[7,[4]]]],0,[[]],[[]],[[],8],[8,7],[8],[[[8,[9]],10],11],[[]],[[]],[8,2],[[],8],[8,7],[8,4],[[],5],[[],5],[[],6],0,[[]],[[]],[[],12],[[[12,[9]],10],11],[[]],[[]],[12,2],[[],12],[12,7],[12,7],[12],[12,4],[[],5],[[],5],[[],6],0,0,[[]],[[]],[13,2],[13,2],[[]],[13,7],[13,7],[[]],[[],13],[13],[[],5],[[],5],[[],6],0,0,0,[14,14],[14],[[14,15,15]],[14,14],[14],[14]],"p":[[3,"Bag"],[15,"bool"],[3,"Iter"],[15,"usize"],[4,"Result"],[3,"TypeId"],[4,"Option"],[3,"Queue"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"Stack"],[3,"BST"],[3,"Vec"],[15,"i32"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
